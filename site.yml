---
- hosts: localhost
  user: root
  tasks:
      # Install apache, update_cache is like running `apt-get update`
    - name: Install Apache2
      apt: name=apache2 state=latest update_cache=yes

      # Install PHP5
    - name: Install PHP 5
      apt: name={{ item }} state=latest
      with_items:
        - php5
        - php5-cgi
        - php5-cli
        - php5-curl
        - php5-json
        - php5-odbc
        - php5-tidy
        - php5-common
        - php5-sqlite
        - php5-xmlrpc
      
      # Install MySQL, python-mysqldb is required by ansible for use of the
      # MySQL modules
    - name: Install MySQL
      apt: name={{ item }} state=latest
      with_items:
        - mysql-server
        - python-mysqldb
        - php5-mysql
        - libapache2-mod-auth-mysql

      # Start MySQL
    - name: Start MySQL
      service: name=mysql state=started

      # create a 16 digit password using an openssl function, we will
      # assign, aka. register, the output to 'mysql_root_pass'
    - name: Create MySQL root pass
      command: /usr/bin/openssl rand -base64 16
      register: mysql_root_pass

      # Updating root password for multiple host names.  We can pass the
      # hosts in the same way that we passed them with adding packages,
      # we are also using the ansibles 'get_facts' variables, 
      # 'ansible_hostname'.  Using variables like this is great when you
      # are deploying to multiple machines
    - name: Update MySQL root passwd
      mysql_user: name=root host={{ item }} password={{ mysql_root_pass.stdout }}
      with_items:
        - "{{ ansible_hostname }}"
        - 127.0.0.1
        - ::1
        - localhost

    - name: copy .my.cnf file with root password credentials
      template: src=templates/my.cnf.j2 dest=/root/.my.cnf owner=root mode=0600

    - name: delete anonymous MySQL server user for localhost
      mysql_user: name="" state=absent

    - name: remove the MySQL test database
      mysql_db: name=test state=absent
